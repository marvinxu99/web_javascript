class Elf {
    constructor(name, weapon) {
        this.name = name;
        this.weapon = weapon;        
    }
    attack() {
        return 'attack with ' + this.weapon;        
    }
}

const peter = new Elf('Peter', 'stones');

//copying peter to Ogre
const ogre = {...peter}

//************************************
//Inheritance 
class Character {
    constructor(name, weapon) {
        this.name = name;
        this.weapon = weapon;        
    }
    attack() {
        return 'attack with ' + this.weapon;        
    }
}

class Elf extends Character {
    constructor(name, weapon, type) {
        super(name, weapon);
        this.type = type
    }
}

class Ogre extends Character {
    constructor(name, weapon, colour) {
        super(name, weapon);
        this.colour = colour
    }
    makefor(){

    }
}

const peter = new Elf('Peter', 'stones', 'house');
console.log(peter);

const ohwell = new Ogre('Ohwell', 'cloth', 'red');
console.log(ohwell); 

//THIS IS NOT CORRECT
//console.log(Ogre.isPrototypeOf(ohwell));   ==> false
console.log(Ogre.prototype.isPrototypeOf(ohwell));  //==> true
console.log(Character.prototype.isPrototypeOf(Ogre.prototype)) // == true

//Use instanceof to check inheritance
console.log('ohwell instanceof Ogre:', ohwell instanceof Ogre);
console.log('ohwell instanceof Character:', ohwell instanceof Character);
