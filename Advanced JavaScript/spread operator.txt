Spread Operator ...

Extracting key/value pairs of one object and adding them as children of another object is a very common scenario.

const obj1 = { dog: 'woof' };
const obj2 = { cat: 'meow' };
console.log({ ...obj1, ...obj2 }); // prints { dog: 'woof', cat: 'meow' }

The great part is, this also works seamlessly with arrays: 
const arr1 = [1, 2];
const arr2 = [3, 4];
console.log([ ...arr1, ...arr2 ]); // prints [1, 2, 3, 4]

It’s probably not the most important recent JS feature, but it’s one of my favorites.


********************
ES9 (ES2018) added support or object spread operator

const animals = {
    tiger: 23,
    lion: 2,
    moneky: 3,
    bird: 4
}

function objectSpread(p1, p2, p3){
    console.log(p1);
    console.log(p2);
    console.log(p3);
}

const { tiger, lion, ...rest} = animals;

console.log(tiger);
console.log(rest);
objectSpread(tiger, lion, rest);


************************
const array1 = [1,2,3,4,5];

function sum(a, b, c, d, e) {
    return a + b + c + d + e;
}

sum(...array1);
