Static vs Dynamically Typed
Primitive Types
Pass by reference vs Pass by value
Type Coercion
Arrays, Functions, Objects

Types of 
number
boolean
string
undefined
null    typeof null  object, it is a mistake – it should be ‘null’
Symbol(‘just me’)    type of Symbol(‘just me’) – used to identify objects
Object { }

[] Array is an object. To check if it is an array, use Array.isArray().

var c = [1,2,3,4,5];
var d = [].concat(c);    // copy the arrary over

// Clone 
let obj = { a: 'a', b: 'b', c: 'c' };
let clone = Object.assign({}, obj)
let clone2 = {...obj};    //Spread operator, new in javascript

obj.c = 5;

console.log(obj);
console.log(clone);
console.log(clone2);

//Shallow clone
let obj = { 
	a: 'a', 
	b: 'b', 
	c: {deep: 'Try and copy me'} 
    };
let clone = Object.assign({}, obj)
let clone2 = {...obj};    //Spread operator, new in javascript

obj.c = 5;

console.log(obj);
console.log(clone);
console.log(clone2);

//Superclone
let obj = { 
	a: 'a', 
	b: 'b', 
	c: {deep: 'Try and copy me'} 
    };
let clone = Object.assign({}, obj)
let clone2 = {...obj};    //Spread operator, new in javascript
let superClone = JSON.parse(JSON.stringify(obj))

obj.c.deep = 'hahahhahah';

console.log(obj);
console.log(clone);
console.log(clone2);
console.log(superClone);

//*****************
//Type coercion

 